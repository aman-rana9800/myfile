<xs:schema version="1.06"
           xmlns="https://schema.iccsafe.org/book/schema/1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:m="http://www.w3.org/1998/Math/MathML"
           targetNamespace="https://schema.iccsafe.org/book/schema/1.0"
           elementFormDefault="qualified">
 
 <!-- ========================================================================== -->
 <!-- Version         1.0                                                        -->
 <!--                                                                            -->
 <!--                 Copyright (C) 2022, International Code Council Inc (ICC)   -->
 <!--                 All rights reserved.                                       -->
 <!--                                                                            -->
 <!-- Schema name     icc-schema.xsd                                             -->
 <!--                                                                            -->
 <!-- Purpose         The current state of ICC XML (xHTML) is inconsistent       -->
 <!--                 in structure across the organization. In support of        -->
 <!--                 the internal Content Hub initiative, ICC requires an       -->
 <!--                 updated XML schema for the management of its diverse       -->
 <!--                 commercialized content                                     -->
 <!--                                                                            -->
 <!-- Developed by    Schema Development Cell, Aptara Inc.                       -->
 <!--                                                                            -->
 <!-- Reviewed by     International Code Council Inc. (ICC)                      -->
 <!--                                                                            -->
 <!-- Creation date   November 10, 2021                                          -->
 <!--                                                                            -->
 <!-- Last modified   June 6, 2023                                                -->
 <!--                                                                            -->
 <!-- ========================================================================== -->
 
 <!-- ========================================================================== -->
 <!-- Schema Version/Change History                                              -->
 <!--                                                                            -->
 <!-- mm-dd-yyyy: Change descriptions                                            -->
 <!--                                                                            -->
 <!-- 11-10-2022 - BH:  Added element 'figure-note' to element 'figure'.         -->
 <!-- 11-10-2022 - BH:  Modified version number of schema to '1.01'.             -->
 <!-- 03-02-2023 - BH:  Added QR-Code Structure.   (ver. 1.02)                   -->
 <!--                        Version 1.03                                        --> 
 <!-- 04-04-2023 - BH:  Replaced 'para-elements' and 'block-level' elements      -->
 <!--============================================================================-->
 <!--                        Version 1.04                                        -->
 <!-- 05-09-2023 - BH:  Modified attributes on the 'publication' element.        -->
 <!--                     Removed attribute 'version'.                           -->
 <!--                     Added required attributes 'schema-version'.            -->
 <!--                     Added document-version to root (publication) element.  -->
 <!-- ========================================================================== -->
 <!--                        Version 1.05                                        -->
 <!-- 06-06-2023  -BH:  Added element 'book-icon' to 'QR-Code'.                  -->
 <!--                   Added attribute 'display' with values 'yes' and 'no'     -->
 <!--                     to 'QR-Code' element.                                  -->
 <!-- ========================================================================== -->
 <!--                        Version 1.06                                        -->
 <!-- 06-14-2023 - BH:  Added element 'part' at same level as division and       -->
 <!--                   Level-1. Used a substitutionGroup.                       -->
 <!-- ========================================================================== -->
 
 <xs:import schemaLocation="mathml3.0/mathml3.xsd" namespace="http://www.w3.org/1998/Math/MathML"/>

<!-- ========================================================================== -->
<!-- Group Definitions                                                          -->
<!-- ========================================================================== -->

 <xs:group name="frontmatter-elements">
  <xs:choice>
   <xs:element ref="titlegroup"/>
   <xs:element ref="authorgroup"/>
   <xs:element ref="other-credit"/>
   <xs:element ref="publisher"/>
   <xs:element ref="address"/>
   <xs:element ref="volumenum"/>
   <xs:element ref="edition"/>
   <xs:element ref="pubdate"/>
   <xs:element ref="mediaobject-group"/>
   <xs:element ref="mediaobject"/>
   <xs:element ref="url"/>
   <xs:element ref="issn"/>
   <xs:element ref="isbn"/>
   <xs:element ref="copyright"/>
   <xs:element ref="legalnotice"/>
   <xs:element ref="disclaimer"/>
   <xs:element ref="credit"/>
   <xs:element ref="trademarks"/>
   <xs:element ref="tag-line"/>
   <xs:element ref="history"/>
   <xs:element ref="publication-history"/>
   <xs:element ref="printing-location"/>
   <xs:element ref="cover-image"/>
  </xs:choice>
 </xs:group>

 <xs:group name="header-elements">
  <xs:choice>
   <xs:element ref="QR-code"></xs:element>
   <xs:element ref="toc"/>
   <xs:element ref="authorgroup"/>
   <xs:element ref="other-credit"/>
   <xs:element ref="objectives"/>
   <xs:element ref="history"/>
   <xs:element ref="related-links"/>
   <xs:element ref="note"/>
   <xs:element ref="abstract"/>
   <xs:element ref="keywords"/>
   <xs:element ref="question"/>
   <xs:element ref="answer"/>
   <xs:element ref="customer-id"/>
   <xs:element ref="record-id"/>
  </xs:choice>
 </xs:group>

 <!-- ****************** -->

 <xs:group name="level-1-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-2" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-2" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-2-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-3" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-3" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-3-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-4" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-4" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-4-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-5" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-5" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-5-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-6" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-6" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-6-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-7" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-7" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-7-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-8" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-8" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-8-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-9" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-9" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-9-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-10" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-10" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-10-bodymatters">
  <xs:choice>
   <xs:sequence>
    <xs:element ref="body"/>
    <xs:choice minOccurs="0">
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-11" maxOccurs="unbounded"/>
       <xs:element ref="section" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="level-11" maxOccurs="unbounded"/>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:choice>
 </xs:group>

 <xs:group name="level-11-bodymatters">
  <xs:sequence>
   <xs:choice>
    <xs:sequence>
     <xs:element ref="body"/>
     <xs:element ref="section" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:sequence>
     <xs:element ref="section" maxOccurs="unbounded"/>
    </xs:sequence>
   </xs:choice>
  </xs:sequence>
 </xs:group>

 <!-- ****************** -->

 <xs:group name="cals-or-html-group">
  <xs:choice>
   <xs:element ref="tgroup" minOccurs="0" maxOccurs="unbounded"/>
   <xs:group ref="html-table-group" minOccurs="0" maxOccurs="unbounded"/>
  </xs:choice>
 </xs:group>

 <xs:group name="html-table-group">
  <xs:sequence>
   <xs:choice minOccurs="0">
    <xs:element ref="col" maxOccurs="unbounded"/>
    <xs:element ref="colgroup" maxOccurs="unbounded"/>
   </xs:choice>
   <xs:element name="thead" minOccurs="0">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Table Head: A container element for the table header rows of a table. The
       thead container identifies the rows of a table that form the head of the table, as distinct
       from the body (tbody) rows. Header rows are always rendered at the beginning of the table.
       This element is expected to obey the semantics described in Tables, as specified in
       XHTML.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:complexType>
     <xs:sequence>
      <xs:element ref="tr" maxOccurs="unbounded"/>
     </xs:sequence>
     <xs:attributeGroup ref="id-optional"/>
     <xs:attributeGroup ref="common-attributes"/>
     <xs:attributeGroup ref="revision-attributes"/>
     <xs:attribute name="valign" type="vertical-alignment"/>
    </xs:complexType>
   </xs:element>
   <xs:element name="tbody" maxOccurs="unbounded">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Table Body: A container for the body rows of a table. The tbody container
       identifies the rows of a table that form the body of the table, as distinct from the header
       (thead) and footer (tfoot) rows. This element is expected to obey the semantics described in
       Tables, as specified in XHTML.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:complexType>
     <xs:sequence>
      <xs:element ref="tr" maxOccurs="unbounded"/>
     </xs:sequence>
     <xs:attributeGroup ref="id-optional"/>
     <xs:attributeGroup ref="common-attributes"/>
     <xs:attributeGroup ref="revision-attributes"/>
     <xs:attribute name="valign" type="vertical-alignment"/>
    </xs:complexType>
   </xs:element>
   <xs:element name="tfoot" minOccurs="0">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Table Footer: A container for the footer rows of a table. The tfoot
       container identifies the rows of a table that form the footer of the table, as distinct from
       the header (thead) and body (tbody) rows. This element is expected to obey the semantics
       described in Tables, as specified in XHTML.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:complexType>
     <xs:sequence>
      <xs:element ref="tr" maxOccurs="unbounded"/>
     </xs:sequence>
     <xs:attributeGroup ref="id-optional"/>
     <xs:attributeGroup ref="common-attributes"/>
     <xs:attributeGroup ref="revision-attributes"/>
     <xs:attribute name="valign" type="vertical-alignment"/>
    </xs:complexType>
   </xs:element>
  </xs:sequence>
 </xs:group>

 <!-- ****************** -->

 <xs:group name="block-elements">
  <xs:choice>
   <xs:group ref="para-elements"/>
   <xs:group ref="list-elements"/>
   <xs:group ref="table-elements"/>
   <xs:group ref="figure-elements"/>
   <xs:group ref="maths-elements"/>
   <xs:group ref="publishing-elements"/>
   <xs:element ref="promulgator"/>
  </xs:choice>
 </xs:group>

 <xs:group name="para-elements">
  <xs:choice>
   <xs:element ref="commentary"/>
   <xs:element ref="p"/>
   <xs:element ref="exception"/>
   <xs:element ref="form"/>
  </xs:choice>
 </xs:group>

 <xs:group name="list-elements">
  <xs:choice>
   <xs:element ref="ol"/>
   <xs:element ref="ul"/>
   <xs:element ref="where-list"/>
   <xs:element ref="def-list"/>
  </xs:choice>
 </xs:group>

 <xs:group name="table-elements">
  <xs:choice>
   <xs:element ref="table"/>
   <xs:element ref="informal-table"/>
  </xs:choice>
 </xs:group>

 <xs:group name="figure-elements">
  <xs:choice>
   <xs:element ref="figure"/>
   <xs:element ref="informal-figure"/>
   <xs:element ref="mediaobject-group"/>
   <xs:element ref="mediaobject"/>
  </xs:choice>
 </xs:group>

 <xs:group name="maths-elements">
  <xs:choice>
   <xs:element ref="equation"/>
   <xs:element ref="informal-equation"/>
  </xs:choice>
 </xs:group>

 <xs:group name="publishing-elements">
  <xs:choice>
   <xs:element ref="margin-text"/>
   <xs:element ref="boxed-text"/>
   <xs:element ref="blockquote"/>
   <xs:element ref="address"/>
   <xs:element ref="note"/>
  </xs:choice>
 </xs:group>

 <!-- ****************** -->

 <xs:group name="block-math">
  <xs:sequence>
   <xs:element ref="m:math" minOccurs="0"/>
   <xs:element ref="mediaobject" minOccurs="0"/>
   <xs:element ref="mediaobject-group" minOccurs="0"/>
  </xs:sequence>
 </xs:group>

 <xs:group name="inline-math">
  <xs:sequence>
   <xs:element ref="m:math" minOccurs="0"/>
   <xs:element ref="inline-mediaobject" minOccurs="0"/>
   <xs:element ref="inline-mediaobject-group" minOccurs="0"/>
  </xs:sequence>
 </xs:group>

 <!-- ****************** -->

 <xs:group name="inline-elements">
  <xs:choice>
   <xs:group ref="formatting-elements"/>
   <xs:group ref="linking-elements"/>
   <xs:group ref="track-change-elements"/>
   <xs:element ref="inline-equation"/>
   <xs:element ref="inline-mediaobject"/>
   <xs:element ref="inline-mediaobject-group"/>
   <xs:element ref="acronym"/>
   <xs:element ref="abbr"/>
   <xs:element ref="phrase"/>
   <xs:element ref="history"/>
   <xs:element ref="keyterm"/>
   <xs:element ref="index-term"/>
   <xs:element ref="footnote"/>
  </xs:choice>
 </xs:group>

 <xs:group name="formatting-elements">
  <xs:choice>
   <xs:element ref="emphasis"/>
   <xs:element ref="sub"/>
   <xs:element ref="sup"/>
   <xs:element ref="br"/>
  </xs:choice>
 </xs:group>

 <xs:group name="linking-elements">
  <xs:choice>
   <xs:element ref="xref"/>
   <xs:element ref="url"/>
   <xs:element ref="legref"/>
  </xs:choice>
 </xs:group>

 <xs:group name="track-change-elements">
  <xs:choice>
   <xs:element ref="insert"/>
   <xs:element ref="delete"/>
  </xs:choice>
 </xs:group>

<!-- ========================================================================== -->
<!-- Element definitions                                                        -->
<!-- ========================================================================== -->

 <xs:element name="publication">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Publication: Container for entire publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="volume" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attribute name="schema-version" use="required" type="xs:decimal"/>
   <xs:attribute name="document-version" use="optional" type="xs:decimal"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="volume">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Volume: Container for volumes of a publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata"/>
    <xs:element ref="titlegroup"/>
    <xs:element ref="frontmatter" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:element ref="level-1"/>
     <xs:element ref="division"/>
    </xs:choice>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="volume-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="metadata">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Metadata: Container for meta information of associate
     element.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice minOccurs="1" maxOccurs="unbounded">
    <xs:element ref="meta-group"/>
    <xs:element ref="meta"/>
    <xs:element ref="abstract"/>
    <xs:element ref="keywords"/>
    <xs:element ref="isbn"/>
    <xs:element ref="issn"/>
    <xs:element ref="volumenum"/>
    <xs:element ref="edition"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="frontmatter">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Front Matter: Container for all front matter components for a publication such
     as titlepage, copyright page, preface, foreword, toc etc.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlepage" minOccurs="0"/>
    <xs:element ref="copyright-page" minOccurs="0"/>
    <xs:element ref="preface" minOccurs="0"/>
    <xs:element ref="section" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element ref="foreword" minOccurs="0"/>
    <xs:element ref="toc" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="division">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Division: The division element is intended to be used as a collection of
     related chapters. In other words divisions are divider pages that can be used to create a
     substructure of related chapters.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:element ref="toc" minOccurs="0"/>
    <xs:choice>
     <xs:sequence>
      <xs:choice maxOccurs="unbounded">
       <xs:element ref="frontmatter"/>
       <xs:group ref="block-elements"/>
      </xs:choice>
      <xs:choice minOccurs="0">
       <xs:sequence>
        <xs:choice>
         <xs:element ref="level-1" maxOccurs="unbounded"/>
         <xs:element ref="division" maxOccurs="unbounded"/>
        </xs:choice>
       </xs:sequence>
      </xs:choice>
     </xs:sequence>
     <xs:sequence>
      <xs:choice>
       <xs:element ref="level-1" maxOccurs="unbounded"/>
       <xs:element ref="division" maxOccurs="unbounded"/>
      </xs:choice>
     </xs:sequence>
    </xs:choice>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="part" substitutionGroup="division">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>part: The part element is intended to be used as a collection of
     related chapters. In other words parts are divider pages that can be used to create a
     substructure of related chapters.
    
     A part has the same structure as a division and it is a substitutionGroup for the division tag.
    </xs:documentation>
   </xs:appinfo>
  </xs:annotation>
 </xs:element>
 
 <!-- ****************** -->

 <xs:element name="level-1">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 1: This is a top-level element to capture chapter or chapter-like
     environments of the publication. Attribute role identifies the type of the element. The
     possible value of role is 'chapter'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-1-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-2">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 2: This is a second-level element to capture part- or article-like
     environments of the publication. Attribute role identifies the type of the element. The
     possible value of role is 'part' or 'article'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-2-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-3">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 3: Third-level to eleventh-level (level-3 to level-11) elements used to
     capture the subsections associated to 'Part' or 'Article' of the publication. Attribute role
     identifies the type of the element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-3-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-4">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 4: This is a forth-level element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-4-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-5">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 5: This is a fifth-level element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-5-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-6">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 6: This is a sixth-level element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-6-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-7">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 7: This is a seventh-level element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-7-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-8">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 8: This is an eighth-level element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-8-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-9">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 9: This is an ninth-level element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-9-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-10">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 10: This is an tenth-level element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-10-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="level-11">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Level 11: This is a eleventh-level element. The possible value of role is
     'legis-section'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-11-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="meta-group">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Meta Group: Container for a single piece of metadata.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:element ref="meta-group"/>
    <xs:element ref="meta"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="meta">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Meta: Name of a single piece of metadata</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
   </xs:choice>
   <xs:attribute name="name" use="required"/>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="titlegroup">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Title Group: Container element to hold the various titles such as super title,
     title and sub-title for a book component such as a chapter.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="super-title" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:element ref="committee-desig"/>
     <xs:element ref="label"/>
     <xs:element ref="number"/>
     <xs:element ref="title"/>
    </xs:choice>
    <xs:element ref="sub-title" minOccurs="0"/>
    <xs:element ref="history" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="super-title">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Super Title: Super title represents the category of the whole
     document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="committee-desig">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Committee Designation: The bracketed letter designations for committees
     responsible for portions of the code in front of a code section number.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="responsible-for" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="label">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Label: Any prefix word associated with a number, for example, the title of a
     figure, such as "Figure 1".</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="number">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Number: The number or letter designating the sequence.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="title">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Title: The title element holds the title for a hierarchical section (book,
     chapter, section, etc.).</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="title-abbreviation" type="xs:string"/>
   <xs:attribute name="title-year" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="sub-title">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Sub Title: The subtitle element holds the subtitle for a hierarchical section
     (book, chapter, section etc.).</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="titlepage">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Title Page: Container for title page of the publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:group ref="frontmatter-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="copyright-page">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Copyright Page: Container for copyright page of the
     publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:group ref="frontmatter-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="issn">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>ISSN: Used to capture an international standard serial
     number.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="isbn">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>ISBN: Used to capture an international standard book
     number.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="copyright">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Copyright: The copyright element holds information about the date(s) and
     holder(s) of a publication. If an extended block of text describing the copyright or other
     legal status is required, use legal notice.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:element ref="copyright-statement"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attribute name="year" type="xs:integer"/>
   <xs:attribute name="holder" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="copyright-statement">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Copyright Statement: The copyright statement element holds information formal
     copyright statement. If an extended block of text describing the copyright or other legal
     status is required, use legal notice.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="legalnotice">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Legal Notice: A legalnotice identifies a statement of legal obligation,
     requirement, or warranty. It is formatted as a displayed block. It occurs in the
     meta-information for a document in which it frequently explains copyright, trademark, and other
     legal formalities of a document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="p" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="trademarks">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Trademarks: A trademark statement identifies a legal trademark in the
     copyright page.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="p" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="tag-line">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Tag Line: Tagline is a short text which serves to clarify a thought for. Many
     tagline slogans are reiterated phrases associated with an individual, social group, or
     product.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="publication-history">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Publication History: The publication history of a document identifies print
     mode of the publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:element ref="p" maxOccurs="unbounded"/>
    <xs:element ref="publication-date" maxOccurs="unbounded"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attribute name="type">
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="print"/>
      <xs:enumeration value="pdf"/>
      <xs:enumeration value="html"/>
      <xs:enumeration value="ePubs"/>
      <xs:enumeration value="other"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <xs:element name="publication-date">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Publication Date: It is used to capture the publication date of a 
     document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attribute name="number" type="xs:string"/>
   <xs:attribute name="year" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="printing-location">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Printing Location: It is used to capture the printing location of a 
     document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="p" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="cover-image">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Cover Image: It is used to capture cover image of the
     publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice>
    <xs:element ref="mediaobject" maxOccurs="unbounded"/>
    <xs:element ref="mediaobject-group" maxOccurs="unbounded"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="preface">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Preface: Preface is an introductory content prior to the first chapter in the
     publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:choice>
     <xs:sequence>
      <xs:group ref="block-elements" maxOccurs="unbounded"/>
      <xs:element ref="section" minOccurs="0" maxOccurs="unbounded"/>
     </xs:sequence>
     <xs:sequence>
      <xs:element ref="section" maxOccurs="unbounded"/>
     </xs:sequence>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="tocentry" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="foreword">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Foreword: A section at the beginning of a book that introduces the book and is
     usually written by someone other than the book's author.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:choice>
     <xs:sequence>
      <xs:group ref="block-elements" maxOccurs="unbounded"/>
      <xs:element ref="section" minOccurs="0" maxOccurs="unbounded"/>
     </xs:sequence>
     <xs:sequence>
      <xs:element ref="section" maxOccurs="unbounded"/>
     </xs:sequence>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="tocentry" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="toc">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table of Contents: The toc element defines a Table of Contents, or more
     generally, a List of Titles in a document. Often an empty toc is used to indicate where the
     automatically generated toc should be rendered.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
     <xs:element ref="tocdiv"/>
     <xs:element ref="toc-entry"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="tocdiv">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>TOC Division: A tocdiv is a division in a manually constructed Table of
     Contents, or more generally, a List of Titles.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:element ref="tocdiv"/>
    <xs:element ref="toc-entry"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="toc-entry">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>TOC Entry: A toc-entry is an entry in a manually constructed Table of
     Contents, or more generally, a List of Titles. Formatted as a displayed
     block.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="label" minOccurs="0"/>
    <xs:element ref="title"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attribute name="pagenum" type="xs:string"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="authorgroup">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Author Group: The authorgroup element is a container around multiple authors
     or editors. May be formatted inline or as a displayed block, depending on context. Sometimes
     given very special treatment, especially on title pages or other displayed
     areas.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice maxOccurs="unbounded">
    <xs:element ref="author"/>
    <xs:element ref="editor"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="other-credit">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Other Credit: A person or entity, other than an author or editor, credited in
     a document. May be formatted inline or as a displayed block, depending on
     context.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:choice>
     <xs:element ref="personname"/>
     <xs:element ref="orgname"/>
    </xs:choice>
    <xs:choice minOccurs="0">
     <xs:element ref="affiliation"/>
     <xs:element ref="address"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="author">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Author: The name of an individual author of a document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:choice maxOccurs="unbounded">
     <xs:element ref="personname"/>
     <xs:element ref="orgname"/>
    </xs:choice>
    <xs:choice minOccurs="0">
     <xs:element ref="affiliation"/>
     <xs:element ref="address"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="editor">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Editor: The name of an individual editor of a document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:choice maxOccurs="unbounded">
     <xs:element ref="personname"/>
     <xs:element ref="orgname"/>
    </xs:choice>
    <xs:choice minOccurs="0">
     <xs:element ref="affiliation"/>
     <xs:element ref="address"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="personname">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Person Name: The personname identifies the personal name of an
     individual.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:element ref="honorific"/>
    <xs:element ref="firstname"/>
    <xs:element ref="middlename"/>
    <xs:element ref="surname"/>
    <xs:element ref="lineage"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="honorific">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Honorific: An honorific occurs in the name of an individual. It is the
     honorific title of the individual, such as Dr., Mr., or Ms.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="firstname">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>First Name: The Western-style first name of an author, editor, or other
     individual.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="middlename">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Middle Name: The Western-style middle name of an author, editor, or other
     individual.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="surname">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Surname: A surname is a family name; in Western cultures, the "last
     name."</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="lineage">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Lineage: A lineage is a portion of a person's name, typically Jr. or Sr. The
     portion of a person's name indicating a relationship to ancestors.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="orgname">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Organization Name: An orgname identifies the name of an organization or
     corporation.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="affiliation">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Affiliation: The institutional affiliation of an author, contributor, or other
     individual.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice maxOccurs="unbounded">
    <xs:element ref="orgname"/>
    <xs:element ref="jobtitle"/>
    <xs:element ref="address"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="jobtitle">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Job Title: A jobtitle describes the position of an individual within an
     organization.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="address">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Addess: Container element for contact information such as a postal address for
     a person or organization.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:element ref="add-line"/>
    <xs:element ref="orgname"/>
    <xs:element ref="street"/>
    <xs:element ref="city"/>
    <xs:element ref="state"/>
    <xs:element ref="country"/>
    <xs:element ref="postalcode"/>
    <xs:element ref="email"/>
    <xs:element ref="url"/>
    <xs:element ref="phone"/>
    <xs:element ref="fax"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="add-line">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Address Line: Within an address, add-line is for parts of an address other
     than street, city, state, country, phone, fax, and email, postal code all of which have
     elements specific to their content.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="street">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Street: In postal addresses, the street element contains the street address
     portion of the address.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="city">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>City: The name of a city in an address.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="state">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>State: A state is the name or postal abbreviation for a state (or province) in
     an address.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="country">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Country: The name of a country, typically in an address.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="postalcode">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Postal Code: A postal code (in the United States, a ZIP code) in an
     address.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="email">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Email: Inline markup identifying an email address.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="mailto" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Mail to: It is a Uniform Resource Identifier (URI) scheme for email
       addresses. It is used to produce hyperlinks on websites that allow users to send an email to
       a specific address directly from an HTML document, without having to copy it and entering it
       into an email client.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <xs:element name="phone">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Phone: A phone identifies a telephone number in an address.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="fax">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Fax: A fax is a fax number in an address.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="objectives">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Objectives: Provides useful supplementary information such as a "User note"
     ("help").</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="block-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="history">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>History: An element used to describe the history of specific pieces of
     content. The history is used to describe the history of a law. For example, when the law was
     adopted or repealed.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="linking-elements"/>
    <xs:group ref="track-change-elements"/>
    <xs:element ref="history-date"/>
    <xs:element ref="loclaw"/>
    <xs:element ref="footnote"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="history-date">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>History Date: Date of the history item.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attribute name="type">
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="amended"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="added"/>
      <xs:enumeration value="adopted"/>
      <xs:enumeration value="repealed"/>
      <xs:enumeration value="readopted"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="legref">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Legal Reference: Legal reference of the history item.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
    <xs:element ref="history-date"/>
    <xs:element ref="loclaw"/>
    <xs:element ref="footnote"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="ref" type="xs:string"/>
   <xs:attribute name="sourceid" type="xs:string"/>
   <xs:attribute name="error" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="loclaw">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Local Law: The number of the changed local law, or the local law that required
     the change in the code book.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="sourceid" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Specify source id of local law.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="fileordinance" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Specify file ordinance of local law.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="fileminutes" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Specify file minutes of local law.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="related-links">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Related Links: The related links is used to refer to other chapters in the
     same legislation.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="para-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="abstract">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Abstract: It is expected to contain some sort of summary of the content with
     which it is associated.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="block-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="keywords">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Keywords: A set of keywords describing the content of a document. Keywords are
     provided by the author, editor, publisher, can be stored in the document meta-information.
     Keywords can form an important part of an automated indexing or searching strategy for a
     collection of documents.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="keyword" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="keyword">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Keyword: One of a set of keywords describing the content of a document. A
     keyword is a term describing the content of a document. The keyword applies to the document
     component that contains it.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="question">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Question: Used to capture questions of the document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="p" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="answer">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Answer: Used to capture answers of the document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="p" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="customer-id">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Customer ID: It is used to customer id.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="record-id">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Record ID: It is used to capture record id.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attribute name="number" type="xs:string"/>
   <xs:attribute name="year" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="body">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Body: It is a container for body matter of levels.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:group ref="block-elements" maxOccurs="unbounded"/>
   </xs:sequence>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="section">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Section: A recursive section. A section is one of the top-level sectioning
     elements in a component. It is used to represent hierarchy within a preface, chapter, appendix,
     or another section. The id attribute is used to give the section a unique id for linking
     purposes.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:element ref="abstract" minOccurs="0"/>
    <xs:element ref="keywords" minOccurs="0"/>
    <xs:choice>
     <xs:sequence>
      <xs:group ref="block-elements" maxOccurs="unbounded"/>
      <xs:element ref="section" minOccurs="0" maxOccurs="unbounded"/>
     </xs:sequence>
     <xs:sequence>
      <xs:element ref="section" maxOccurs="unbounded"/>
     </xs:sequence>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="reservecount" type="xs:integer"/>
   <xs:attribute name="disp-level" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="ol">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Ordered List: A list in which each entry is marked with a sequentially
     incremented label. In an ordered list, each member of the list is marked with a numeral,
     letter, or other sequential symbol (such as roman numerals).</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="li" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attribute name="type" default="arabic">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>List Type: Indicates the desired numeration type.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="arabic"/>
      <xs:enumeration value="upper-alpha"/>
      <xs:enumeration value="lower-alpha"/>
      <xs:enumeration value="upper-roman"/>
      <xs:enumeration value="lower-roman"/>
      <xs:enumeration value="custom"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="prefix" type="xs:string"/>
   <xs:attribute name="suffix" type="xs:string"/>
   <xs:attribute name="start" type="xs:integer"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="ul">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Unordered List: A list in which each entry is marked with a bullet, dash or
     other dingbat/symbol.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="li" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attribute name="type" default="disc">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>List Type: Indicates the desired symbol type. The allowed values are: disc,
       squire, gray-squire, circle, check, hyphen, none.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="disc"/>
      <xs:enumeration value="square"/>
      <xs:enumeration value="gray-square"/>
      <xs:enumeration value="circle"/>
      <xs:enumeration value="check"/>
      <xs:enumeration value="hyphen"/>
      <xs:enumeration value="custom"/>
      <xs:enumeration value="none"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="li">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>List Item: The li element is used to represent an item within an ordered or
     unordered list. In an unordered list or an ordered list, the li surrounds the entire list
     item.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="label" minOccurs="0"/>
    <xs:group ref="block-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="where-list">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Where List: A where-list typically used to document variables in a display
     equations.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="var-entry" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="var-entry">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Variable Entry: A var-entry is an entry in a variable list. Each var-entry
     contains term (variable name) and their description or definition.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="varname"/>
    <xs:element ref="vardesc" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="varname">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Variable Name: The word or phrase being defined or described in a variable
     list.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="vardesc">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Variable Description: As the definition, description, or other explanation of
     a variable a two-part list, which is called a where-list.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:group ref="block-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="def-list">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Definition List: A list in which each item consists of two parts: a word,
     phrase or term with one of more descriptions, discussions, explanations, or definitions of
     it.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="def-item" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="def-item">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Definition Item: It is a container of the term and definition. The def-item
     holds a term and the definitions/descriptions of that term.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="committee-desig" minOccurs="0"/>
    <xs:element ref="term"/>
    <xs:element ref="def" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="term">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Term: The object being defined or described with a definition in a two-part
     list where the term occupies the first column and is the subject of the definition or
     description, which occupies the second column.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="linking-elements"/>
    <xs:group ref="track-change-elements"/>
    <xs:element ref="inline-mediaobject"/>
    <xs:element ref="inline-mediaobject-group"/>
    <xs:element ref="acronym"/>
    <xs:element ref="abbr"/>
    <xs:element ref="phrase"/>
    <xs:element ref="footnote"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="def">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Definition: As the definition, description, or other explanation of a term a
     two-part list, which is called a definition list.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:group ref="block-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="equation">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Equation: A displayed mathematical equation. An equation is a formal
     mathematical equation with a required label. A mathematical equation, expression that is to be
     displayed as a block (callout) within the narrative flow.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="label"/>
    <xs:group ref="block-math"/>
    <xs:element ref="where-list" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="tocentry" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="informal-equation">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Informal Equation: A displayed mathematical equation without label. A
     mathematical equation, expression that is to be displayed as a block within the narrative
     flow.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:group ref="block-math"/>
    <xs:element ref="where-list" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="inline-equation">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Inline Equation: A mathematical equation or expression occurring as inline.
     These equations are expressions (usually mathematical) that occur in the text
     flow.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:group ref="inline-math"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="figure">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Figure: A formal figure with a label and title. Figures often contain media
     objects. Frequently they are given IDs and referenced from the text with
     link.  11-10-2022 - added 'figure-note' element to the model.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:choice>
     <xs:element ref="mediaobject"/>
     <xs:element ref="mediaobject-group"/>
     <xs:element ref="form"/>
    </xs:choice>
    <xs:element ref="caption" minOccurs="0"/>
    <xs:element ref="figure-note" minOccurs="0"/>
    <xs:element ref="legend" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element ref="source" minOccurs="0"/>
    <xs:element ref="credit" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="float" type="float"/>
   <xs:attribute name="orient" default="port">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Orientation: Specifies the orientation of the associate
       element.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="port"/>
      <xs:enumeration value="land"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <!--<xs:attribute ref="orient"/>-->
  </xs:complexType>
 </xs:element>
 
 <xs:element name="figure-note">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Figure Note: Identifies the figure-note of a figure that form the end of the
     figure.  NOTE:  Added 'figure-note' element 2022-10-11.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="label" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:group ref="para-elements"/>
     <xs:group ref="list-elements"/>
     <xs:group ref="maths-elements"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="informal-figure">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Informal Figure: A figure without label and title. It is often contain media
     objects.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:choice>
     <xs:element ref="mediaobject"/>
     <xs:element ref="mediaobject-group"/>
     <xs:element ref="form"/>
    </xs:choice>
    <xs:element ref="caption" minOccurs="0"/>
    <xs:element ref="legend" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element ref="source" minOccurs="0"/>
    <xs:element ref="credit" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attribute name="orient" default="port">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Orientation: Specifies the orientation of the associate
       element.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="port"/>
      <xs:enumeration value="land"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <!--<xs:attribute ref="orient"/>-->
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="mediaobject-group">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Mediaobject Group: Container element for a group of mediaobject that are to be
     displayed together.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="mediaobject" maxOccurs="unbounded"/>
    <xs:element ref="caption" minOccurs="0"/>
    <xs:element ref="disclaimer" minOccurs="0"/>
    <xs:element ref="source" minOccurs="0"/>
    <xs:element ref="credit" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="mediaobject">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Mediaobject: Container displayed media object (video, audio and image).
     Additional textual descriptions may be provided with caption.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="longdesc" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:element ref="video"/>
     <xs:element ref="audio"/>
     <xs:element ref="img"/>
    </xs:choice>
    <xs:element ref="caption" minOccurs="0"/>
    <xs:element ref="legend" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element ref="disclaimer" minOccurs="0"/>
    <xs:element ref="source" minOccurs="0"/>
    <xs:element ref="credit" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="inline-mediaobject-group">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Inline Mediaobject Group: Container element for a group of inline-mediaobject
     that are to be displayed together.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="inline-mediaobject" maxOccurs="unbounded"/>
    <xs:element ref="caption" minOccurs="0"/>
    <xs:element ref="disclaimer" minOccurs="0"/>
    <xs:element ref="source" minOccurs="0"/>
    <xs:element ref="credit" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="inline-mediaobject">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Inline Mediaobject: A container inline media object (video, audio, image etc).
     Additional textual descriptions may be provided with caption.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="caption" minOccurs="0"/>
    <xs:element ref="longdesc" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:element ref="video"/>
     <xs:element ref="audio"/>
     <xs:element ref="img"/>
    </xs:choice>
    <xs:element ref="disclaimer" minOccurs="0"/>
    <xs:element ref="source" minOccurs="0"/>
    <xs:element ref="credit" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="video">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Video: Pointer to external video data. An external file that holds the video,
     such as an animation or a movie.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="media-attributes"/>
   <xs:attribute name="controls" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="audio">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Audio: Pointer to external audio data. An external file that holds the audio,
     such as an animation or a movie.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="src" type="xs:string" use="required"/>
   <xs:attribute name="alt" type="xs:string" use="required"/>
   <xs:attribute name="rendition" type="xs:string"/>
   <xs:attribute name="mime-type" type="xs:string"/>
   <xs:attribute name="controls" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="img">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Image: Pointer to external image data. This element points to an external
     entity containing graphical image data. The src attribute is used to indicate the location of
     the image being referenced. May be formatted inline or as a displayed block, depending on
     context.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="media-attributes"/>
  </xs:complexType>
 </xs:element>
 
 <xs:element name="book-icon">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>The book icon is a unique graphic that is specific for every book that is used
    in the QR-Code generation.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="media-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="caption">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Caption: Container element for the textual description that is associated with
     an object such as figure, table or mediaobjects.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:group ref="para-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="longdesc">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Long Description: The long description is used by some systems to make the
     object accessible to people or systems that cannot read/see/display the
     object.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="legend">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Legend: Legends or captions explain figures, tables, or images in the
     manuscript.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="disclaimer">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Disclaimer: Used to capture statement that denies something, especially
     responsibility.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="para-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="source">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Source: Used to capture the source of a published photograph, mediaobject or a
     table. This element is expected to generate text, usually "Source" in English.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="credit">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Credit: Used to capture a note acknowledging the source of a published
     photograph, mediaobject or a table. This element is expected to generate text, usually "Credit"
     in English.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="para-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="table">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table: A formal table in a document with label and title. The table can be
     HTML, Cals, or a reference to an external document. Cals table is expected to obey the
     semantics of the Cals Table Model. HTML table is expected to obey the semantics described as
     specified in XHTML. The rows and columns part of a full table.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:element ref="QR-code" minOccurs="0"/>
    <xs:choice>
     <xs:group ref="cals-or-html-group"/>
     <xs:element ref="mediaobject"/>
     <xs:element ref="mediaobject-group"/>
     <xs:element ref="nonxml"/>
    </xs:choice>
    <xs:element ref="caption" minOccurs="0"/>
    <xs:element ref="legend" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element ref="table-notes" minOccurs="0"/>
    <xs:element ref="source" minOccurs="0"/>
    <xs:element ref="credit" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attributeGroup ref="cals-table-attributes"/>
   <xs:attributeGroup ref="html-table-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="informal-table">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Informal Table: An isolated group of tabular content without associated
     elements like table number, title, etc. The table can be either HTML, Cals, or a reference to
     an external document. Cals table is expected to obey the semantics of the Cals Table Model.
     HTML table is expected to obey the semantics described as specified in XHTML. The rows and
     columns part of a full table.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="caption" minOccurs="0"/>
    <xs:choice>
     <xs:group ref="cals-or-html-group"/>
     <xs:element ref="mediaobject"/>
     <xs:element ref="mediaobject-group"/>
     <xs:element ref="nonxml"/>
    </xs:choice>
    <xs:element ref="legend" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element ref="table-notes" minOccurs="0"/>
    <xs:element ref="source" minOccurs="0"/>
    <xs:element ref="credit" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="correlated-attributes"/>
   <xs:attributeGroup ref="cals-table-attributes"/>
   <xs:attributeGroup ref="html-table-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="tgroup">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Group: A container for the main content of a table, or part of a table.
     A tgroup surrounds a logically complete portion of a table. Most tables consist of a single
     tgroup, but complex tables with widely varying column specifications may be easier to code
     using multiple tgroups. The tgroup specifies the number of columns in the table, and contains
     all of the header, body and footnotes, along with any additional column or span specifications
     necessary to express the geometry of the table.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="colspec" maxOccurs="unbounded"/>
    <xs:element ref="spanspec" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element ref="thead" minOccurs="0"/>
    <xs:element ref="tbody" maxOccurs="unbounded"/>
    <xs:element ref="tfoot" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="align-attributes"/>
   <xs:attribute name="cols" use="required" type="xs:integer">
    <xs:annotation>
     <xs:documentation>Columns: If the value is 1 then column separators are turned on. If the value
      is 0 then column separators are turned off.</xs:documentation>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="colsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Column Separator: If the value is 1 then column separators are turned on. If
      the value is 0 then column separators are turned off.</xs:documentation>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="rowsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Row Separator: If the value is 1 then row separators (the line that separates
      the rows) are turned on (i.e. they are visible). If the value is 0 then row separators are
      turned off (i.e. they are hidden).</xs:documentation>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="colspec">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Column Specification: Specifications for a column in a table. The attributes
     of this empty element specify the presentation characteristics of entries in a column of a
     table. Each colspec refers to a single column. Columns are numbered sequentially from left to
     right in the table. If the column attribute is not specified, the colspec is for the next
     column after the preceding colspec or column 1 if it is the first colspec. This element is
     expected to obey the semantics of the Cals Table Model.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="align-attributes"/>
   <xs:attribute name="colnum">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Column Number: Provides a number for a column specification (1, 2
       etc).</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:pattern value="([0-9]+)"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="colname">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Column Name: Provides a name for a column specification (col1, col2
       etc).</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:pattern value="(col[0-9]+)"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="colsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Column Separator: If the value is 1 then column separators are turned on. If
      the value is 0 then column separators are turned off.</xs:documentation>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="rowsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Row Separator: If the value is 1 then row separators (the line that separates
      the rows) are turned on (i.e. they are visible). If the value is 0 then row separators are
      turned off (i.e. they are hidden).</xs:documentation>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="colwidth" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Column Width: Specifies the width of the column.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="spanspec">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Span Specification: A spanspec associates a name with a span between two
     columns in a table. In the body of the table, cells can refer to the span by name. Cells that
     refer to a span will span horizontally from the first column to the last column, inclusive.
     Cells can also form spans directly, by naming the start and end columns themselves. The added
     benefit of a spanspec is that it can associate formatting information (such as alignment and
     table rule specifications) with the span. This information does not need to be repeated then,
     on each spanning cell. This element is expected to obey the semantics of the Cals Table
     Model.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="align-attributes"/>
   <xs:attribute name="spanname">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Span Name: Provides a name for a span specification (col5-7, col9-11
       etc).</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:pattern value="(col[0-9]+\-[0-9]+)"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="namest">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Name Start: Specifies an starting column by name (col1, col2
       etc).</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:pattern value="(col[0-9]+)"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="nameend">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Name End: Specifies an starting column by name (col1, col2
       etc).</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:pattern value="(col[0-9]+)"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="colsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Column Separator: If the value is 1 then column separators are turned on. If
      the value is 0 then column separators are turned off.</xs:documentation>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="rowsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Row Separator: If the value is 1 then row separators (the line that separates
      the rows) are turned on (i.e. they are visible). If the value is 0 then row separators are
      turned off (i.e. they are hidden).</xs:documentation>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="colgroup">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Column Group: Identifies a column group in an HTML table. Processed like an
     HTML colgroup.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="col" minOccurs="0" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="align-attributes"/>
   <xs:attribute name="class" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Class: This attribute assigns a class name or set of class names to an
       element. Any number of elements may be assigned the same class name or names. Multiple class
       names must be separated by white space characters.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="title" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Title: This attribute offers advisory information about the element for
       which it is set.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="span" type="xs:integer">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Span: This attribute, which must be an integer, specifies the number of
       columns in a column group. In the absence of a span attribute, each colgroup defines a column
       group containing one column.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="width" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Width: This attribute specifies a default width for each column in the
       current column group. In addition to the standard pixel, percentage, and relative values,
       this attribute allows the special form "0*" which means that the width of the each column in
       the group should be the minimum width necessary to hold the column's contents. This implies
       that a column's entire contents must be known before its width may be correctly computed.
       Authors should be aware that specifying "0*" will prevent visual user agents from rendering a
       table incrementally. This attribute is overridden for any column in the column group whose
       width is specified via a col element.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <xs:element name="col">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Column: Identifies a column specification in an HTML table. Processed like an
     HTML col.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="align-attributes"/>
   <xs:attribute name="class" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Class: This attribute assigns a class name or set of class names to an
       element. Any number of elements may be assigned the same class name or names. Multiple class
       names must be separated by white space characters.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="title" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Title: This attribute offers advisory information about the element for
       which it is set.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="span" type="xs:integer">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Span: This attribute, which must be an integer, specifies the number of
       columns in a column group. In the absence of a span attribute, each colgroup defines a column
       group containing one column.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="width" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Width: This attribute specifies a default width for each column in the
       current column group. In addition to the standard pixel, percentage, and relative values,
       this attribute allows the special form "0*" which means that the width of the each column in
       the group should be the minimum width necessary to hold the column's contents. This implies
       that a column's entire contents must be known before its width may be correctly computed.
       Authors should be aware that specifying "0*" will prevent visual user agents from rendering a
       table incrementally. This attribute is overridden for any column in the column group whose
       width is specified via a col element.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="thead">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Head: A container element for the table header rows of a table. The
     thead container identifies the rows of a table that form the head of the table, as distinct
     from the body (tbody) rows. Header rows are always rendered at the beginning of the table. This
     element is expected to obey the semantics of the Cals Table Model.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="row" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="valign" type="vertical-alignment"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="tbody">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Body: A container for the body rows of a table. The tbody container
     identifies the rows of a table that form the body of the table, as distinct from the header
     (thead) and footer (tfoot) rows. In most tables, the tbody contains most of the rows. This
     element is expected to obey the semantics of the CALS Table Model.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="row" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="valign" type="vertical-alignment"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="tfoot">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Footer: A container for the footer rows of a table. The tfoot container
     identifies the rows of a table that form the footer of the table, as distinct from the header
     (thead) and body (tbody) rows. This element is expected to obey the semantics of the CALS Table
     Model.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="row" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="valign" type="vertical-alignment"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="row">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Row: A row in a table. It contains all of the cells (entries) that appear in
     that row. This element is expected to obey the semantics of the Cals Table Model. Within a row,
     cells are arranged horizontally from the start of the row to the end. Cells can, but are not
     required to, specify the column in which they occur, so it is possible for a row to contain
     fewer cells than there are columns in the table. This introduces missing cells, which are
     assumed to be empty. These missing cells can occur anywhere in the row.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="entry" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rowsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Row Separator: If the value is 1 then row separators (the line that separates
      the rows) are turned on (i.e. they are visible). If the value is 0 then row separators are
      turned off (i.e. they are hidden).</xs:documentation>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <xs:element name="tr">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Row: Identifies a row in an HTML table. This element is expected to obey
     the semantics described in Tables, as specified in XHTML.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice>
    <xs:element ref="th" minOccurs="0" maxOccurs="unbounded"/>
    <xs:element ref="td" minOccurs="0" maxOccurs="unbounded"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="entry">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Entry: A cell in a table. Each entry may specify its starting column. Entries
     that do not explicitly specify a starting column begin implicitly in the column that is
     immediately adjacent to the preceding cell. Note that entries with the @morerows attribute from
     preceding rows implicitly occupy cells in the succeeding rows. It is legal for some entries to
     be completely absent (at the beginning, middle, or end of a row). This element is expected to
     obey the semantics of the Cals Table Model.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:group ref="para-elements"/>
    <xs:group ref="list-elements"/>
    <xs:group ref="table-elements"/>
    <xs:group ref="figure-elements"/>
    <xs:group ref="maths-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="align-attributes"/>
   <xs:attribute name="colname">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Column Name: Provides a name for a column specification (col1, col2
       etc).</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:pattern value="(col[0-9]+)"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="namest">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Name Start: Specifies an starting column by name (col1, col2
       etc).</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:pattern value="(col[0-9]+)"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="nameend">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Name End: Specifies an starting column by name (col1, col2
       etc).</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:pattern value="(col[0-9]+)"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attribute name="morerows" type="xs:integer">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>More Rows: Specifies the number of additional rows which this entry
       occupies. Defaults to zero.</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="colsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Column Separator: If the value is 1 then column separators are turned on. If
      the value is 0 then column separators are turned off.</xs:documentation>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="rowsep" type="zeroorone">
    <xs:annotation>
     <xs:documentation>Row Separator: If the value is 1 then row separators (the line that separates
      the rows) are turned on (i.e. they are visible). If the value is 0 then row separators are
      turned off (i.e. they are hidden).</xs:documentation>
    </xs:annotation>
   </xs:attribute>
   <xs:attribute name="background-color" type="xs:string">
    <xs:annotation>
     <xs:documentation>Background Color: Specifies the background color of the
      entry.</xs:documentation>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <xs:element name="td">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Data: Identifies an entry in an HTML table. This element is expected to
     obey the semantics described in Tables, as specified in XHTML.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:group ref="para-elements"/>
    <xs:group ref="list-elements"/>
    <xs:group ref="table-elements"/>
    <xs:group ref="figure-elements"/>
    <xs:group ref="maths-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="align-attributes"/>
   <xs:attributeGroup ref="td-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="th">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Head: Identifies a "head" entry in an HTML table. This element is
     expected to obey the semantics described in Tables, as specified in XHTML.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:group ref="para-elements"/>
    <xs:group ref="list-elements"/>
    <xs:group ref="table-elements"/>
    <xs:group ref="figure-elements"/>
    <xs:group ref="maths-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="align-attributes"/>
   <xs:attributeGroup ref="td-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="table-notes">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Notes: The table-notes wrapper identifies the table-note of a table that
     form the end of the table.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="table-note" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="table-note">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Table Note: Identifies the table-note of a table that form the end of the
     table.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="label" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:group ref="para-elements"/>
     <xs:group ref="list-elements"/>
     <xs:group ref="table-elements"/>
     <xs:group ref="figure-elements"/>
     <xs:group ref="maths-elements"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:simpleType name="zeroorone">
  <xs:restriction base="xs:string">
   <xs:enumeration value="0">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>No</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:enumeration>
   <xs:enumeration value="1">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>Yes</xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:enumeration>
  </xs:restriction>
 </xs:simpleType>

 <!-- ****************** -->

 <xs:element name="margin-text">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Margin Text: Textual material that is part of the body of text but outside the
     flow of the narrative text and print at margin.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="block-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="background-color" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="boxed-text">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Boxed Text: Textual material that is part of the body of text but outside the
     flow of the narrative text, for example caution, tip, note box, etc.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:choice>
     <xs:sequence>
      <xs:group ref="block-elements" maxOccurs="unbounded"/>
      <xs:element ref="section" minOccurs="0" maxOccurs="unbounded"/>
     </xs:sequence>
     <xs:sequence>
      <xs:element ref="section" maxOccurs="unbounded"/>
     </xs:sequence>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="background-color" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="blockquote">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Blockquote: Block quotations are set off from the main text, as opposed to
     occurring inline.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:group ref="para-elements" maxOccurs="unbounded"/>
    <xs:element ref="attrib" minOccurs="0"/>
   </xs:sequence>
   <xs:attribute name="type">
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="extract"/>
      <xs:enumeration value="display-quote"/>
      <xs:enumeration value="epigraph"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="attrib">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Attribution: An attribution identifies the source to which a blockquote or
     epigraph is ascribed.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="note">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Note: A note is an admonition set off from the main text. Often outputs the
     generated text "Note".</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="para-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="p">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Paragraph: A part of a piece of writing that consists of one or more
     sentences. It always starts on a new line and formatted as a displayed block. The role
     attribute is used to subclass the paragraph to achieve variations in
     presentation.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="para-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="commentary">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Commentary: The format of the Commentary includes the full text of each
     section, table and figure in the code, followed immediately by the commentary applicable to
     that text.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="block-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="exception">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Exception: A container for an exception to what is stated in a given section,
     considered part of that section. It consists of one or more paragraphs, the first of which
     begins with 'Exception'.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:group ref="para-elements"/>
    <xs:group ref="list-elements"/>
    <xs:group ref="table-elements"/>
    <xs:group ref="figure-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="form">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Form: Form is used to capture those pages where input is most often sent to a
     server for processing.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="objectives" minOccurs="0"/>
    <xs:element ref="form-spec" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="form-spec">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Form Specification: It is used to identify the form types ie. html, pdf
     etc.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="external-ref" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="filetype" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="external-ref">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>External Reference: It is used to capture location of the
     form.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attribute name="location" use="required"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="promulgator">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Promulgator: Container for a given organization that promulgates standards and
     citations of its standards that are referenced in the present publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="acronym"/>
    <xs:element ref="address" minOccurs="0"/>
    <xs:element ref="references"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="references">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>References: Container for citations of the promulgator's referenced standards
     that appear in the present publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="ref" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="ref">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Reference: Container for the citation of one standard referenced in the
     present publication.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup"/>
    <xs:element ref="nav-pointer-group" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="nonxml">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Non XML: Used to reference Non-XML insertion types: Word, Excel,
     etc.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="longdesc" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="src" type="xs:string" use="required"/>
   <xs:attribute name="alt" type="xs:string" use="required"/>
   <xs:attribute name="filetype" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="emphasis">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Emphasis: The emphasis element is used to indicate text that should be
     emphasized. The type attribute can be used to influence the type of emphasis that should be
     applied. Italic is the default presentation. The other possible values of type are bold-italic,
     underline, smallcaps, monospace, double-underline, strikethrough, overline, sanserif,
     other-style and roman.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attributeGroup ref="emphasis-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="sub">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Subscript: A number or expression that is set lower than the baseline and
     slightly smaller, to act as an inferior or subscript. A subscript identifies text that is to be
     displayed as a subscript when rendered.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="sup">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Superscript: A number or expression that is set higher than the baseline and
     slightly smaller, to act as a superior or superscript. Superscripts are usually printed in a
     smaller font and shifted up with respect to the baseline.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="br">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Break: Break is defined to allow a user to break a paragraph or
     title.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="acronym">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Acronym: An acronym is often pronounceable word made from the initial letters
     of a name or phrase. It is often printed in all capitals or small capitals, although this is
     sometimes incorrect (consider dpi or bp).</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="linking-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="abbr">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Abbreviation: An abbreviation, especially one followed by a period. It is used
     in the text of a document, possibly including a definition or expansion of the
     acronym.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="phrase">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Phrase: The phrase is used to represent a span of text. The phrase element in
     ICC Schema has no specific semantic. It is provided as a container around a selection of words
     smaller than a paragraph so that it is possible to provide an id or other attributes for
     them.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="keyterm">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Key Term: The key term element is used to hold the glossary term within a body
     text. It is formatted as inline to reference glossary entry.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="defintion" type="xs:string"/>
   <xs:attribute name="glossary" type="yesorno"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="xref">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>eXternal Reference: xref is used for any kind of internal cross-referencing.
     This element may be used to reference anything that has an ID attribute. It takes the place of
     the many named types of references (such as figure references, table references, equation
     references, footnote references etc.).</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rid" use="required" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid" use="required"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="url">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Uniform Resource Locator: The url element represents a link to a URL. The href
     attribute is used to indicate the destination URL for the link. It identifies url in content
     which generally starts with www or http.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
    <xs:element ref="inline-mediaobject"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="href" use="required" type="xs:string"/>
   <xs:attribute name="target" fixed="blank"/>
   <xs:attribute name="alt" type="xs:string"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="insert">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Insert: It is used to capture inserted text of track
     change.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="delete">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Delete: It is used to capture deleted text of track change.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="footnote">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Footnote: This element is a container around the contents of a footnote. The
     footnote element usually generates a mark (a superscript symbol or number) at the place in the
     flow of the document in which it occurs. The id attribute is used to give the footnote a unique
     id that can be referenced by the link element. The label attribute is used to indicate the text
     that should be used to reference the footnote inline with the body text. The body of the
     footnote is then presented elsewhere, typically at the bottom of the page.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="label" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:group ref="para-elements"/>
     <xs:group ref="list-elements"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="backmatter">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Back Matter: Container for all back matter components for a publication.
     Ancillary or supporting material that is not included as part of the main textual content of a
     book but that follows the body of material that composes the book. Back Matter, for example,
     might include: appendices, glossaries, and bibliographic reference lists.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:element name="division" type="backmatter-division"/>
    <xs:element ref="appendix"/>
    <xs:element ref="level-1"/>
    <xs:element ref="glossary"/>
    <xs:element ref="disposition-list"/>
    <xs:element ref="endnotes"/>
    <xs:element ref="bibliography"/>
    <xs:element ref="index"/>
    <xs:element ref="errata"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:complexType name="backmatter-division">
  <xs:sequence>
   <xs:element ref="metadata" minOccurs="0"/>
   <xs:element ref="titlegroup" minOccurs="0"/>
   <xs:choice maxOccurs="unbounded">
    <xs:element ref="appendix"/>
    <xs:element ref="glossary"/>
    <xs:element ref="level-1"/>
    <xs:element ref="disposition-list"/>
    <xs:element ref="endnotes"/>
    <xs:element ref="bibliography"/>
    <xs:element ref="index"/>
    <xs:element ref="errata"/>
   </xs:choice>
  </xs:sequence>
  <xs:attributeGroup ref="id-required"/>
  <xs:attributeGroup ref="common-attributes"/>
  <xs:attributeGroup ref="revision-attributes"/>
  <xs:attributeGroup ref="correlated-attributes"/>
  <xs:attribute name="indexnum" type="xs:string"/>
  <xs:attribute name="tocentry" type="yesorno"/>
  <xs:attribute name="tocautoadd" type="yesorno"/>
 </xs:complexType>

 <!-- ****************** -->

 <xs:element name="appendix">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Appendix: Appendixes are usually additional material added to end of a document.
     It is formatted as a displayed block. Typically, appendixes are lettered rather than numbered,
     and appear in the table of contents. The id attribute is used to give the appendix a unique id
     for linking purposes.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:group ref="header-elements" minOccurs="0" maxOccurs="unbounded"/>
    <xs:group ref="level-1-bodymatters"/>
    <xs:element ref="backmatter" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="glossary">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Glossary: A glossary contains a collection of terms and brief descriptions or
     definitions of those terms. It is formatted as a displayed block. A glossary in a book
     frequently causes a forced page break in print media. The id attribute is used to give the
     glossary a unique id for linking purposes.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:choice>
     <xs:element ref="glossdiv" minOccurs="0" maxOccurs="unbounded"/>
     <xs:element ref="gloss-entry" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="indexnum" type="xs:string"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="glossdiv">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Glossary Division: A glossdiv is a section of a glossary. A Glossary might be
     divided into sections in order to group terms, perhaps alphabetically. A Glossary may contain
     any number of gloss-entry or glossdiv elements, but it cannot contain a mixture of both at the
     same level.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="gloss-entry" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="gloss-entry">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Glossary Entry: The gloss-entry element is used as a wrapper glossary entry
     element for a glossary term and its associated definition or definition
     references.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="committee-desig" minOccurs="0"/>
    <xs:element ref="term"/>
    <xs:choice>
     <xs:element name="def" minOccurs="0" type="gloss-definition"/>
     <xs:element ref="gloss-see" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:complexType name="gloss-definition">
  <xs:sequence>
   <xs:group ref="block-elements" maxOccurs="unbounded"/>
   <xs:element ref="gloss-seealso" minOccurs="0"/>
  </xs:sequence>
  <xs:attributeGroup ref="id-optional"/>
  <xs:attributeGroup ref="common-attributes"/>
  <xs:attributeGroup ref="revision-attributes"/>
 </xs:complexType>

 <xs:element name="gloss-see">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Glossary See: The gloss-see element is used to create a cross-reference from
     one gloss-entry to another. It is to be used when there is not a definition for the current
     entry.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="otherterm" type="xs:IDREFS"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="gloss-seealso">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Glossary See Also: The gloss-seealso element is used to create a
     cross-reference from one glossary entry to another. It is to be used when there is a definition
     for the current entry.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="otherterm" type="xs:IDREFS"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="disposition-list">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Disposition List: Chronological list of legislation.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup"/>
    <xs:element ref="toc" minOccurs="0"/>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
     <xs:element ref="authorgroup"/>
     <xs:element ref="other-credit"/>
     <xs:element ref="objectives"/>
     <xs:element ref="history"/>
     <xs:element ref="note"/>
    </xs:choice>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
     <xs:element ref="level-2"/>
     <xs:element name="section" maxOccurs="unbounded" type="derivation-and-disposition-section"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <xs:complexType name="derivation-and-disposition-section">
  <xs:sequence>
   <xs:element ref="titlegroup" minOccurs="0"/>
   <xs:group ref="table-elements" maxOccurs="unbounded"/>
  </xs:sequence>
  <xs:attributeGroup ref="id-required"/>
  <xs:attributeGroup ref="common-attributes"/>
  <xs:attributeGroup ref="correlated-attributes"/>
  <xs:attribute name="disp-level" type="xs:integer"/>
  <xs:attribute name="indexnum" type="xs:string"/>
  <xs:attribute name="tocentry" type="yesorno"/>
 </xs:complexType>

 <!-- ****************** -->

 <xs:element name="endnotes">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>End Notes: Container for a group of end-note at the end of a chapter or book.
     These are alternative presentations of footnotes, which generally at end of the document. In
     print environments that do not support footnotes at the bottom of the page, they may be
     presented as end notes occurring at the end of the component that contains the
     footnote.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="endnote" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="endnote">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>End Note: An endnote is a reference, explanation, or comment placed at the end
     of an article, document, chapter, or book. Footnotes appear at the bottom of the relevant page
     whereas endnotes appear in a list at the end of the chapter or book.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="label" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:group ref="para-elements"/>
     <xs:group ref="list-elements"/>
     <xs:group ref="table-elements"/>
     <xs:group ref="figure-elements"/>
     <xs:group ref="maths-elements"/>
     <xs:group ref="publishing-elements"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="bibliography">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Bibliography: Its main content is a set of bibliography entries. List of
     references (citations) for a book or book component (e.g., a chapter), which is often called
     References, Bibliography, or Additional Reading.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
     <xs:element ref="objectives"/>
    </xs:choice>
    <xs:choice>
     <xs:element ref="bibliodiv" minOccurs="0" maxOccurs="unbounded"/>
     <xs:element ref="bib-entry" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="tocentry" type="yesorno"/>
   <xs:attribute name="tocautoadd" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="bibliodiv">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Bibliography Division: A bibliodiv is a section of a bibliography. A
     bibliography might be divided into sections in order to group different types of sources
     together, like books, journal articles, web sites, and so on. A bibliography may contain any
     number of bib-entry elements or any number of bibliodivs, but it cannot contain a mixture of
     both at the same level.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="bib-entry" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="bib-entry">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Bibliography Entry: A bib-entry is an entry in a bibliography. The contents of
     bib-entry is a "database" of named fields. It is formatted as a displayed block. A bib-entry is
     "raw." It contains a database-like collection of named fields. It is the responsibility of the
     processing system to select elements from within a bib-entry, present them in the correct
     order, and add all punctuation.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:sequence>
    <xs:element ref="label" minOccurs="0"/>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
     <xs:element ref="authorgroup"/>
     <xs:element ref="other-credit"/>
     <xs:element ref="pubdate"/>
     <xs:element ref="citetitle"/>
     <xs:element ref="volumenum"/>
     <xs:element ref="issuenum"/>
     <xs:element ref="edition"/>
     <xs:element ref="publisher"/>
     <xs:element ref="address"/>
     <xs:element ref="pagenums"/>
     <xs:element ref="bibliomisc"/>
     <xs:element ref="biblioid"/>
     <xs:element ref="inline-equation"/>
     <xs:element ref="inline-mediaobject"/>
     <xs:element ref="inline-mediaobject-group"/>
     <xs:group ref="formatting-elements"/>
     <xs:group ref="linking-elements"/>
     <xs:group ref="track-change-elements"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="pubdate">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Publish Date: The pubdate is the date of publication of a
     document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="citetitle">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Cite Title: A citetitle provides inline markup for the title of a cited work.
     It is formatted as an inline. Often italicized for books and quoted for
     articles.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attribute name="pubwork">
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="article"/>
      <xs:enumeration value="book"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="journal"/>
      <xs:enumeration value="manuscript"/>
      <xs:enumeration value="part"/>
      <xs:enumeration value="series"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="volumenum">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Volume Number: A volumenum identifies the volume number of a book in a set, or
     a periodical.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="issuenum">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Issue Number: The issuenum contains the issue number of a periodical. May be
     formatted inline or as a displayed block, depending on context.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="edition">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Edition: The edition contains the name or number of the edition of the
     document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="publisher">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Publisher: A publisher associates a publisher-name and an address. Many
     publishers have offices in more than one city. A publisher can be used to list or distinguish
     between the multiple offices.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:choice maxOccurs="unbounded">
    <xs:element ref="publisher-name"/>
    <xs:element ref="address"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="publisher-name">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Publisher Name: A publisher-name is the name of a publisher. Historically,
     this has been used in bibliographic meta-information to identify the publisher of a book or
     other document. It is also reasonable to identify the publisher of an electronic publication in
     this way.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="pagenums">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Page Numbers: A pagenums identifies a page or range of pages. This may be
     useful in the bibliography of a book, to indicate the number of pages, or in a citation to a
     journal article.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="bibliomisc">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Bibliography Misc.: The bibliomisc element is a container for bibliographic
     information that does not fit neatly into the other bibliographic fields (such as author and
     publisher). It is recommended that the role attribute be used to identify the kind of
     information that this element contains.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="inline-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="biblioid">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Bibliography Identifier: A bibliographic identifier, such as an ISBN number,
     Library of Congress identifier, doi, or URI.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attribute name="type">
    <xs:simpleType>
     <xs:restriction base="xs:string">
      <xs:enumeration value="doi"/>
      <xs:enumeration value="issn"/>
      <xs:enumeration value="isbn"/>
      <xs:enumeration value="standard"/>
      <xs:enumeration value="libraryofcongress"/>
      <xs:enumeration value="pubmed"/>
      <xs:enumeration value="uri"/>
     </xs:restriction>
    </xs:simpleType>
   </xs:attribute>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="index">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Index: An index to a book or part of a book. An index contains the formatted
     index of a document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:choice>
     <xs:element ref="indexdiv" minOccurs="0" maxOccurs="unbounded"/>
     <xs:element ref="index-entry" minOccurs="0" maxOccurs="unbounded"/>
     <xs:element ref="nonxml" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="tocentry" type="yesorno"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="indexdiv">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Index Division: An indexdiv is a section of an index. A index might be divided
     into sections, like A, B, C, and so on. A indexdiv may contain any number of index-entry
     elements.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:element ref="index-entry" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="index-entry">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Index Entry: An index-entry wraps the entire index terms associated with a
     particular primary index term. This includes an arbitrary list of secondary and tertiary
     elements as well as See and SeeAlso elements.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="primaryie"/>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
     <xs:element ref="secondaryie"/>
     <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="tertiaryie"/>
     </xs:choice>
    </xs:sequence>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="primaryie">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Primary Index Entry: A primaryie identifies the most significant word or words
     in an index-entry. The index-entries occur in an index, not in the flow of the text. They are
     part of a formatted index, not markers for indexing. If a document includes both index-terms
     and index-entries, the index-entries are usually constructed from the index-terms by some
     external process.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="term"/>
    <xs:choice minOccurs="0">
     <xs:element ref="seeie"/>
     <xs:element ref="seealsoie"/>
    </xs:choice>
    <xs:element ref="nav-pointer-group" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="secondaryie">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Secondary Index Entry: A secondaryie identifies a secondary word or words in
     an index-entry. In index-entries, you can specify as many secondary terms that are necessary.
     Secondary and tertiary terms can be mixed, following the primary.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="term"/>
    <xs:choice minOccurs="0">
     <xs:element ref="seeie"/>
     <xs:element ref="seealsoie"/>
    </xs:choice>
    <xs:element ref="nav-pointer-group" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="tertiaryie">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Tertiary Index Entry: A tertiaryie identifies a third-level word or words in
     an index-entry. In index-entries, you can specify as many tertiary terms that are necessary.
     Secondary and tertiary terms can be mixed, following the primary.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="term"/>
    <xs:choice minOccurs="0">
     <xs:element ref="seeie"/>
     <xs:element ref="seealsoie"/>
    </xs:choice>
    <xs:element ref="nav-pointer-group" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="seeie">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>See Index Entry: A seeie identifies a "See" cross reference in an index-entry.
     The index-entries occur in an index, not in the flow of the text. They are part of a formatted
     index, not markers for indexing.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="term" maxOccurs="unbounded"/>
    <xs:element ref="nav-pointer-group" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="prefix" type="xs:string" default="See"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="seealsoie">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>See Also Index Entry: A seealsoie identifies a "See also" cross-reference in
     an index-entry. The index-entries occur in an index, not in the flow of the text. They are part
     of a formatted index, not markers for indexing.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="term" maxOccurs="unbounded"/>
    <xs:element ref="nav-pointer-group" minOccurs="0"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="prefix" type="xs:string" default="See also"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="nav-pointer-group">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Navigation Pointer Group: Container for nav-pointer.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="nav-pointer" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="nav-pointer">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Navigation Pointer: The cross-reference-like element used to point from an
     Index Entry to the place in the text being referenced.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="track-change-elements"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="type" type="xs:string"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="index-term">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Index Term: An index-term identifies text that is to be placed in the index.
     In the simplest case, the placement of the index-term in the document identifies the location
     of the term in the text. In other words, the index-term is placed in the flow of the document
     at the point where the index-entry in the index should point. Index-terms are suppressed in the
     primary text flow, although they contribute to the population of an index and serve as anchors
     for cross references. Under no circumstances is the actual content of index-term rendered in
     the primary flow.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="term"/>
    <xs:choice minOccurs="0" maxOccurs="unbounded">
     <xs:element ref="index-term"/>
     <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="see"/>
      <xs:element ref="see-also"/>
     </xs:choice>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="pagenum" type="xs:string"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="see">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>See: The use of see in an index-term indicates that the reader should be
     directed elsewhere in the index if they attempt to look up this term. The content of see
     identifies another term in the index which the reader should consult instead of the current
     term.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="linking-elements"/>
    <xs:group ref="track-change-elements"/>
    <xs:element ref="inline-mediaobject"/>
    <xs:element ref="inline-mediaobject-group"/>
    <xs:element ref="acronym"/>
    <xs:element ref="abbr"/>
    <xs:element ref="phrase"/>
    <xs:element ref="footnote"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <xs:element name="see-also">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>See Also: The use of see-also in an index-term indicates that the reader
     should be directed elsewhere in the index for additional information. The content of see-also
     identifies another term in the index that the reader should consult in addition to the current
     term.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:choice minOccurs="0" maxOccurs="unbounded">
    <xs:group ref="formatting-elements"/>
    <xs:group ref="linking-elements"/>
    <xs:group ref="track-change-elements"/>
    <xs:element ref="inline-mediaobject"/>
    <xs:element ref="inline-mediaobject-group"/>
    <xs:element ref="acronym"/>
    <xs:element ref="abbr"/>
    <xs:element ref="phrase"/>
    <xs:element ref="footnote"/>
   </xs:choice>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
   <xs:attributeGroup ref="revision-attributes"/>
   <xs:attribute name="rid" type="xs:IDREFS"/>
   <!--<xs:attribute ref="rid"/>-->
  </xs:complexType>
 </xs:element>

 <!-- ****************** -->

 <xs:element name="errata">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Errata: Container for erratum.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="erratum" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="erratum">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Erratum: A mistake in a book or any printed or written document added after
     the book is printed.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="metadata" minOccurs="0"/>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:choice maxOccurs="unbounded">
     <xs:group ref="block-elements"/>
     <xs:element ref="correction"/>
    </xs:choice>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>

 <xs:element name="correction">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Correction: Specify the corrections of the document.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="titlegroup" minOccurs="0"/>
    <xs:group ref="block-elements" maxOccurs="unbounded"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-optional"/>
   <xs:attributeGroup ref="common-attributes"/>
  </xs:complexType>
 </xs:element>
 
 <!--==========================================================================-->
 <!-- QR Codes                                                                 -->
 <!--==========================================================================-->
 
 <xs:element name="QR-code">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>The "QR-code" element defines the structure that includes links to the graphical
     QR-code and text links to the URL.  It also provides information about why the QR-code has been 
     created.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType>
   <xs:sequence>
    <xs:element ref="img" minOccurs="1" maxOccurs="1"/>
    <xs:element ref="short-code" minOccurs="1" maxOccurs="1"/>   
    <xs:element ref="book-icon" minOccurs="1" maxOccurs="1"/>
   </xs:sequence>
   <xs:attributeGroup ref="id-required"/>
   <xs:attributeGroup ref="QR-code"/>
  </xs:complexType>
 </xs:element>
 
 <xs:attributeGroup name="QR-code">
  <xs:attribute name="display" use="required">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>The "display" attribute whether the QR code should be displayed in
      the PDF file.
     </xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:token">
     <xs:enumeration value="yes"/>
     <xs:enumeration value="no"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="levelref" use="required" type="xs:IDREF">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>The "levelref" attribute defines a mandatory ID of the component that the 
      QR code is being defined.
     </xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="purpose" use="required">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>The "purpose" attribute defines the purpose for which the QR code is being defined. 
      The values are a defined set of values.
</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:token">
     <xs:enumeration value="add"/>
     <xs:enumeration value="change"/>
     <xs:enumeration value="relocated_from"/>
     <xs:enumeration value="relocated_to"/>
     <xs:enumeration value="delete"/>
     <xs:enumeration value="table"/>
     <xs:enumeration value="appendix"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
 </xs:attributeGroup>
 
 
 
<!-- ========================================================================== -->
<!-- Attributes Group Definition                                                -->
<!-- ========================================================================== -->
 
 <xs:element name="short-code">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>The "shortcode" element is a short mnemonic that is used to resolve the 
     url on Digital Codes.  For example: 'abcde'.  The shortcode will be created programmatically.
    </xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:complexType mixed="true">
   <xs:attributeGroup ref="id-optional"/>
   <xs:attribute name="short-url" use="required" type="xs:string">
    <xs:annotation>
     <xs:appinfo>
      <xs:documentation>The "short-url" element is a url that links to Digital Codes and gets resolved on
       the backend to the full-url, i.e., http://short.iccsafe.org/abcde.
      </xs:documentation>
     </xs:appinfo>
    </xs:annotation>
   </xs:attribute>
  </xs:complexType>
 </xs:element>

 <xs:simpleType name="yesorno">
  <xs:restriction base="xs:string">
   <xs:enumeration value="yes"/>
   <xs:enumeration value="no"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="alignment">
  <xs:restriction base="xs:string">
   <xs:enumeration value="left"/>
   <xs:enumeration value="center"/>
   <xs:enumeration value="right"/>
   <xs:enumeration value="justify"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="vertical-alignment">
  <xs:restriction base="xs:string">
   <xs:enumeration value="top"/>
   <xs:enumeration value="bottom"/>
   <xs:enumeration value="middle"/>
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="float">
  <xs:restriction base="xs:string">
   <xs:enumeration value="top"/>
   <xs:enumeration value="bottom"/>
   <xs:enumeration value="margin"/>
  </xs:restriction>
 </xs:simpleType>

 <!-- ****************** -->

 <xs:attributeGroup name="volume-attributes">
  <xs:attribute name="customer-id" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Customer ID: Specify customer identity.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="title-type">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Title Type: Specification of the publication type.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:string">
     <xs:enumeration value="code"/>
     <xs:enumeration value="landuse"/>
     <xs:enumeration value="manual"/>
     <xs:enumeration value="personnel"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="governing-type">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Governing Type: Specification of the governing type.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:string">
     <xs:enumeration value="authority"/>
     <xs:enumeration value="borough"/>
     <xs:enumeration value="city"/>
     <xs:enumeration value="country"/>
     <xs:enumeration value="municipality"/>
     <xs:enumeration value="town"/>
     <xs:enumeration value="township"/>
     <xs:enumeration value="townvillage"/>
     <xs:enumeration value="village"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="id-required">
  <xs:attribute name="id" type="xs:ID" use="required">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Identifier: Identifies the unique identifier value of the associated element,
      so that the element's content may be cross-referenced. IDs must be unique inside their
      document (not just within their element type). It is required to provide an ID for that
      associated element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="id-optional">
  <xs:attribute name="id" type="xs:ID">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Identifier: Identifies the unique identifier value of the associated element,
      so that the element's content may be cross-referenced. IDs must be unique inside their
      document (not just within their element type). It is not required to provide an ID for that
      associated element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attribute name="rid" type="xs:IDREFS">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Reference Identifier: Points to an internal link target by identifying the
     value of its @id attribute.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
 </xs:attribute>

 <xs:attributeGroup name="common-attributes">
  <xs:attribute name="role" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Role: It is parameterized differently because it is useful to be able to
      subclass role independently on different elements.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="verbatim" type="yesorno">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Verbatim: Used to denote that the content must remain exactly as written and
      represented.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="lang" type="xs:string" default="en-us">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Language: Specifies the natural language of the element and its descendants.
      Default value is en-us.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="add-info" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Additional Information: Provides additional, user-specified information for
      an element if any.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="revision-attributes">
  <xs:attribute name="revision-by" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Revision By: Indicates the editorial revised by to which the element
      belongs.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="revision-datetime" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Revision Date Time: Indicates the editorial revision date time to which the
      element belongs.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="revision">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Revision: Indicates the editorial revision to which the element belongs.
      Identifies the revision status of the element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:string">
     <xs:enumeration value="added"/>
     <xs:enumeration value="deleted"/>
     <xs:enumeration value="changed"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="revision-group" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Revision Group: Indicates the revision group to which the element
      belongs.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="data-changed" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Data Changed: Specifies data changed of the element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="data-changed-in" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Data Changed In: Specifies data changed in of the element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="correlated-attributes">
  <xs:attribute name="correlated-target" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Correlated Target: It is the section the correlated content is related
      to</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="correlated-type">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Correlated Type: Correlated 'required-control' and 'required-passive' will
      always be marked up in pairs, meaning that there cannot be a 'required-control' attribute set
      without a corresponding 'required-passive'. 'optional' and 'associated' would be set as the
      type on both sides of the correlation.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:string">
     <xs:enumeration value="optional"/>
     <xs:enumeration value="associated"/>
     <xs:enumeration value="required-control"/>
     <xs:enumeration value="required-passive"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="para-attributes">
  <xs:attribute name="indent" type="yesorno" default="no">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Indent: Specifies indentation of the paragraph.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="align" type="alignment">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Alignment: Sets the horizontal (line) alignment of the
      paragraph.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="media-attributes">
  <xs:attribute name="src" type="xs:string" use="required">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Source: Identifies the location of the data by URI.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="align" type="alignment">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Alignment: Sets the horizontal (line) alignment of the
      mediaboject.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="valign" type="vertical-alignment">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Vertical Alignment: Sets the vertical alignment of the
      mediaboject.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="alt" type="xs:string" use="required">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Alternate: Specifies an alternate text for the image, if the image for some
      reason cannot be displayed. In other words alt text is for accessibility and would provide the
      same information as the graphic itself and could be used in place of it.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="rendition" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Rendition: To specify about the resolution type of the image.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="mime-type" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Mime Type: The mime type for a graphic, multimedia object, or piece of
      supplementary material.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="width" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Width: Specifies the width of the element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="depth" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Depth: Specifies the depth of the element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="contentwidth" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Content Width: Specifies the width of the content
      rectangle.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="contentdepth" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Content Depth: Specifies the depth of the content
      rectangle.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="scale" type="xs:NMTOKEN">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Scale: Specifies the scaling factor.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="pgwide" type="yesorno">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Pagewide: Indicates if the element is rendered across the column or the
      page.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="scalefit" type="zeroorone" default="1">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Scalefit: Specify the vertical position of the contents.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="cals-table-attributes">
  <xs:attribute name="frame" default="topbot">
   <xs:annotation>
    <xs:documentation>Frame: Specifies which sides of the table should be given rules, making a box
     or frame of lines around the table.</xs:documentation>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:string">
     <!-- Applied on Cals Table -->
     <xs:enumeration value="topbot"/>
     <xs:enumeration value="top"/>
     <xs:enumeration value="bottom"/>
     <xs:enumeration value="none"/>
     <xs:enumeration value="all"/>
     <xs:enumeration value="sides"/>
     <!-- Applied on HTML Table -->
     <xs:enumeration value="void"/>
     <xs:enumeration value="above"/>
     <xs:enumeration value="below"/>
     <xs:enumeration value="hsides"/>
     <xs:enumeration value="lsides"/>
     <xs:enumeration value="lhs"/>
     <xs:enumeration value="rhs"/>
     <xs:enumeration value="box"/>
     <xs:enumeration value="border"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="orient" default="port">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Orientation: Specifies the orientation of the associate
      element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:string">
     <xs:enumeration value="port"/>
     <xs:enumeration value="land"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
  <!--<xs:attribute ref="orient"/>-->
  <xs:attribute name="colsep" type="zeroorone">
   <xs:annotation>
    <xs:documentation>Column Separator: If the value is 1 then column separators are turned on. If
     the value is 0 then column separators are turned off.</xs:documentation>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="rowsep" type="zeroorone">
   <xs:annotation>
    <xs:documentation>Row Separator: If the value is 1 then row separators (the line that separates
     the rows) are turned on (i.e. they are visible). If the value is 0 then row separators are
     turned off (i.e. they are hidden).</xs:documentation>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="float" type="float">
   <xs:annotation>
    <xs:documentation>Float: Specifies style information to be used when rendering the
     float.</xs:documentation>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="background-color" type="xs:string">
   <xs:annotation>
    <xs:documentation>Background Color: Specifies the background color of the
     table.</xs:documentation>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="tabstyle" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Table Style: Specifies the table style.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="tocentry" type="yesorno">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>TOC Entry: Indicates, if the element should appear in a TOC. A TOC can be
      auto-generated containing title of divisions, chapters, articles and
      sections.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="pgwide" type="yesorno">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Pagewide: Indicates if the element is rendered across the column or the
      page.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="html-table-attributes">
  <xs:attribute name="class" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Class: This attribute assigns a class name or set of class names to an
      element. Any number of elements may be assigned the same class name or names. Multiple class
      names must be separated by white space characters.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="title" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Title: This attribute offers advisory information about the element for which
      it is set.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="summary" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Summary: Provides a summary of the table's purpose and structure for user
      agents rendering to non-visual media such as speech and Braille.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="width" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Width: Specifies the width (in pixels only) of the frame around a
      table.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="border" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Border: Specifies the width (in pixels only) of the frame around a
      table.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="cellspacing" type="xs:integer">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Cell Spacing: Specifies how much space the user agent should leave between
      the left side of the table and the left-hand side of the leftmost column, the top of the table
      and the top side of the topmost row, and so on for the right and bottom of the table. The
      attribute also specifies the amount of space to leave between cells.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="cellpadding" type="xs:integer">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Cell Padding: Specifies the amount of space between the border of the cell
      and its contents. If the value of this attribute is a pixel length, all four margins should be
      this distance from the contents. If the value of the attribute is a percentage length, the top
      and bottom margins should be equally separated from the content based on a percentage of the
      available vertical space, and the left and right margins should be equally separated from the
      content based on a percentage of the available horizontal space.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="rules">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Rules: Specifies which rules will appear between cells within a table. The
      rendering of rules is user agent dependent.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:token">
     <xs:enumeration value="none"/>
     <xs:enumeration value="groups"/>
     <xs:enumeration value="rows"/>
     <xs:enumeration value="cols"/>
     <xs:enumeration value="all"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="td-attributes">
  <xs:attribute name="class" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Class: This attribute assigns a class name or set of class names to an
      element. Any number of elements may be assigned the same class name or names. Multiple class
      names must be separated by white space characters.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="title" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Title: This attribute offers advisory information about the element for which
      it is set.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="headers" type="xs:IDREFS">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Headers: List of ids for table data and header cells. Points to (contains) a
      list of one or more IDs of rows and columns that supply header information.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="rowspan" type="xs:integer">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Row Span: The number of rows a cell spans, in other words, a vertical span
      (The table cell content will be tagged with a td or th element.)</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="colspan" type="xs:integer">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Column Span: Horizontal spanning. The attribute specifies the number of
      columns that a table cell will span (The table cell will be tagged with a td or th
      element.)</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="scope">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Scope: Specifies the cells for which the td element provides header
      information. This provides an alternative to using headers (th) if the arrangement of header
      cells is not complex.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:token">
     <xs:enumeration value="col"/>
     <xs:enumeration value="colgroup"/>
     <xs:enumeration value="row"/>
     <xs:enumeration value="rowgroup"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attribute name="orient" default="port">
  <xs:annotation>
   <xs:appinfo>
    <xs:documentation>Orientation: Specifies the orientation of the associate
     element.</xs:documentation>
   </xs:appinfo>
  </xs:annotation>
  <xs:simpleType>
   <xs:restriction base="xs:string">
    <xs:enumeration value="port"/>
    <xs:enumeration value="land"/>
   </xs:restriction>
  </xs:simpleType>
 </xs:attribute>

 <xs:attributeGroup name="align-attributes">
  <xs:attribute name="align">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Alignment: Sets the horizontal (line) alignment of the associate
      element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
   <xs:simpleType>
    <xs:restriction base="xs:string">
     <xs:enumeration value="left"/>
     <xs:enumeration value="center"/>
     <xs:enumeration value="right"/>
     <xs:enumeration value="justify"/>
     <xs:enumeration value="char"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="char" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Character: This attribute specifies a single character within a text fragment
      to act as an axis for alignment.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="charoff" type="xs:string">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Character Offset: When present, this attribute specifies the offset to the
      first occurrence of the alignment character on each line. If a line doesn't include the
      alignment character, it should be horizontally shifted to end at the alignment position. When
      charoff is used to set the offset of an alignment character, the direction of offset is
      determined by the current text direction (set by the dir attribute). In left-to-right texts
      (the default), offset is from the left margin. In right-to-left texts, offset is from the
      right margin. User agents are not required to support this attribute.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
  <xs:attribute name="valign" type="vertical-alignment">
   <xs:annotation>
    <xs:appinfo>
     <xs:documentation>Vertical Alignment: Sets the vertical alignment of the associate
      element.</xs:documentation>
    </xs:appinfo>
   </xs:annotation>
  </xs:attribute>
 </xs:attributeGroup>

 <xs:attributeGroup name="emphasis-attributes">
  <xs:attribute name="type" default="italic">
   <xs:simpleType>
    <xs:restriction base="xs:string">
     <xs:enumeration value="bold"/>
     <xs:enumeration value="italic"/>
     <xs:enumeration value="bold-italic"/>
     <xs:enumeration value="underline"/>
     <xs:enumeration value="double-underline"/>
     <xs:enumeration value="small-caps"/>
     <xs:enumeration value="monospace"/>
     <xs:enumeration value="strikethrough"/>
     <xs:enumeration value="overline"/>
     <xs:enumeration value="sansarif"/>
     <xs:enumeration value="roman"/>
     <xs:enumeration value="other-style"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:attribute>
 </xs:attributeGroup>

</xs:schema>


